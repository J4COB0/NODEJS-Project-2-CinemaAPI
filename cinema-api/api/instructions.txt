// Activity #1:

// 1. Create an Express server
// 2. Establish database connection (Sequelize and must install the corresponding drivers)
// 3. Created models based on the diagram on the Drive
// 4. Establish relation between models



// Activity #2:

// 1. Create actors router 
      a) MUST contain GET, POST, PATCH, DELETE
      b) For PATCH and DELETE, must provide an ID

// 2. Create actors controller file, with the following functions
      a) getAllActors
      b) getActorById
      c) createNewActor
      d) updateActor
      e) deleteActor
      
      NOTE: Only create the functions, leave the functions empty and wrap it with cathAsync

// 3. Pass the newly created functions to their respective endpoint of their router 
// 4. Do the step 1, 2, and 3 but for movies and users



// Activity # 3

Objective: Create a function to insert a new actor in the database
      a) Create a function to insert a new actor in the database
      a) Create a function to get all actors
      a) Create a function to get actor by id
      a) Create a function to update an actor by id (name, country, age)
      a) Create a function that disables the actor (delete) by id

Same for users and movies

NOTE: Image uploading is not necessary but an extra
NOTE: Password must be encrypted for users
NOTE: Update user fields (username, email)
NOTE: Update movie fields (title, description, duration, genre)



// Activity # 4

Objective: Implement login authorization 
      a) Install jsonwebtoken library
      b) Create a login endpoint for user
      c) Verify that credentials (email, password) are valid 
      d) Generate JWT and send it on the response
      e) Create a middleware that validates the token

Apply this middelware on the endpoint that gets all actors to see if it works